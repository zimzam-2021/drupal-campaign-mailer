<?php
// include_once 'src/Lib/sendgrid-php/vendor/autoload.php';

// include_once 'src/Lib/php-mailer/src/Exception.php';
// include_once 'src/Lib/php-mailer/src/OAuth.php';
// include_once 'src/Lib/php-mailer/src/PHPMailer.php';
// include_once 'src/Lib/php-mailer/src/POP3.php';
// include_once 'src/Lib/php-mailer/src/SMTP.php';
// include_once 'src/Lib/faker-php/src/autoload.php';
include_once 'src/Lib/vendor/autoload.php';
require_once 'src/Lib/google-api-php-client-2.5.0/vendor/autoload.php';

require_once "src/Lib/web-scrapper/ultimate-web-scraper-master/support/web_browser.php";
require_once "src/Lib/web-scrapper/ultimate-web-scraper-master/support/tag_filter.php";


const SENDGRID_API = '';
const DRUPAL_PUBLIC_PATH = '/opt/bitnami/apps/drupal/htdocs/sites/default/files/';
const WKHTMLTOPDF_BINARY_COMMAND = 'wkhtmltopdf';

define('Sun',1);
define('Mon',2);
define('Tue',4);
define('Wed',8);
define('Thu',16);
define('Fri',32);
define('Sat',64);

function base64url_encode($data)
{
    return rtrim(strtr(base64_encode($data), '+/', '-_'), '=');
}

function base64url_decode($data)
{
    return base64_decode(str_pad(strtr($data, '-_', '+/'), strlen($data) % 4, '=', STR_PAD_RIGHT));
}

function get_client_ip()
{
    $ipaddress = '';
    if (isset($_SERVER['HTTP_CLIENT_IP']))
        $ipaddress = $_SERVER['HTTP_CLIENT_IP'];
    else if (isset($_SERVER['HTTP_X_FORWARDED_FOR']))
        $ipaddress = $_SERVER['HTTP_X_FORWARDED_FOR'];
    else if (isset($_SERVER['HTTP_X_FORWARDED']))
        $ipaddress = $_SERVER['HTTP_X_FORWARDED'];
    else if (isset($_SERVER['HTTP_FORWARDED_FOR']))
        $ipaddress = $_SERVER['HTTP_FORWARDED_FOR'];
    else if (isset($_SERVER['HTTP_FORWARDED']))
        $ipaddress = $_SERVER['HTTP_FORWARDED'];
    else if (isset($_SERVER['REMOTE_ADDR']))
        $ipaddress = $_SERVER['REMOTE_ADDR'];
    else
        $ipaddress = 'UNKNOWN';
    return $ipaddress;
}





function email_template($siteurl, $sitename, $logoUrl, $title, $name, $email, $body, $call_to_action_link, $call_to_action_text, $footer, $org_address){
    return '
    <html><head>
        <meta name="viewport" content="width=device-width">
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <title>'.$title.'</title>
        <style>
            /* -------------------------------------
              GLOBAL RESETS
          ------------------------------------- */
    
            /*All the styling goes here*/
    
            img {
                border: none;
                -ms-interpolation-mode: bicubic;
                max-width: 100%;
            }
    
            body {
                background-color: #f6f6f6;
                font-family: sans-serif;
                -webkit-font-smoothing: antialiased;
                font-size: 14px;
                line-height: 1.4;
                margin: 0;
                padding: 0;
                -ms-text-size-adjust: 100%;
                -webkit-text-size-adjust: 100%;
            }
    
            table {
                border-collapse: separate;
                mso-table-lspace: 0pt;
                mso-table-rspace: 0pt;
                width: 100%;
            }
    
            table td {
                font-family: sans-serif;
                font-size: 14px;
                vertical-align: top;
            }
    
            /* -------------------------------------
              BODY & CONTAINER
          ------------------------------------- */
    
            .body {
                background-color: #f6f6f6;
                width: 100%;
            }
    
            /* Set a max-width, and make it display as block so it will automatically stretch to that width, but will also shrink down on a phone or something */
            .container {
                display: block;
                margin: 0 auto !important;
                /* makes it centered */
                max-width: 580px;
                padding: 10px;
                width: 580px;
            }
    
            /* This should also be a block element, so that it will fill 100% of the .container */
            .content {
                box-sizing: border-box;
                display: block;
                margin: 0 auto;
                max-width: 580px;
                padding: 10px;
            }
    
            /* -------------------------------------
              HEADER, FOOTER, MAIN
          ------------------------------------- */
            .main {
                background: #ffffff;
                border-radius: 3px;
                width: 100%;
            }
    
            .wrapper {
                box-sizing: border-box;
                padding: 20px;
            }
    
            .content-block {
                padding-bottom: 10px;
                padding-top: 10px;
            }
    
            .footer {
                clear: both;
                margin-top: 10px;
                text-align: center;
                width: 100%;
            }
    
            .footer td,
            .footer p,
            .footer span,
            .footer a {
                color: #999999;
                font-size: 12px;
                text-align: center;
            }
    
            /* -------------------------------------
              TYPOGRAPHY
          ------------------------------------- */
            h1,
            h2,
            h3,
            h4 {
                color: #000000;
                font-family: sans-serif;
                font-weight: 400;
                line-height: 1.4;
                margin: 0;
                margin-bottom: 30px;
            }
    
            h1 {
                font-size: 35px;
                font-weight: 300;
                text-align: center;
                text-transform: capitalize;
            }
    
            p,
            ul,
            ol {
                font-family: sans-serif;
                font-size: 14px;
                font-weight: normal;
                margin: 0;
                margin-bottom: 15px;
            }
    
            p li,
            ul li,
            ol li {
                list-style-position: inside;
                margin-left: 5px;
            }
    
            a {
                color: #3498db;
                text-decoration: underline;
            }
    
            /* -------------------------------------
              BUTTONS
          ------------------------------------- */
            .btn {
                box-sizing: border-box;
                width: 100%;
            }
    
            .btn>tbody>tr>td {
                padding-bottom: 15px;
            }
    
            .btn table {
                width: auto;
            }
    
            .btn table td {
                background-color: #ffffff;
                border-radius: 5px;
                text-align: center;
            }
    
            .btn a {
                background-color: #ffffff;
                border: solid 1px #3498db;
                border-radius: 5px;
                box-sizing: border-box;
                color: #3498db;
                cursor: pointer;
                display: inline-block;
                font-size: 14px;
                font-weight: bold;
                margin: 0;
                padding: 12px 25px;
                text-decoration: none;
                text-transform: capitalize;
            }
    
            .btn-primary table td {
                background-color: #e60000;
            }
    
            .btn-primary a {
                background-color: #e60000;
                border-color: #e60000;
                color: #ffffff;
            }
    
            /* -------------------------------------
              OTHER STYLES THAT MIGHT BE USEFUL
          ------------------------------------- */
            .last {
                margin-bottom: 0;
            }
    
            .first {
                margin-top: 0;
            }
    
            .align-center {
                text-align: center;
            }
    
            .align-right {
                text-align: right;
            }
    
            .align-left {
                text-align: left;
            }
    
            .clear {
                clear: both;
            }
    
            .mt0 {
                margin-top: 0;
            }
    
            .mb0 {
                margin-bottom: 0;
            }
    
            .preheader {
                color: transparent;
                display: none;
                height: 0;
                max-height: 0;
                max-width: 0;
                opacity: 0;
                overflow: hidden;
                mso-hide: all;
                visibility: hidden;
                width: 0;
            }
    
            .powered-by a {
                text-decoration: none;
            }
    
            hr {
                border: 0;
                border-bottom: 1px solid #f6f6f6;
                margin: 20px 0;
            }
    
            /* -------------------------------------
              RESPONSIVE AND MOBILE FRIENDLY STYLES
          ------------------------------------- */
            @media only screen and (max-width: 620px) {
                table[class=body] h1 {
                    font-size: 28px !important;
                    margin-bottom: 10px !important;
                }
    
                table[class=body] p,
                table[class=body] ul,
                table[class=body] ol,
                table[class=body] td,
                table[class=body] span,
                table[class=body] a {
                    font-size: 16px !important;
                }
    
                table[class=body] .wrapper,
                table[class=body] .article {
                    padding: 10px !important;
                }
    
                table[class=body] .content {
                    padding: 0 !important;
                }
    
                table[class=body] .container {
                    padding: 0 !important;
                    width: 100% !important;
                }
    
                table[class=body] .main {
                    border-left-width: 0 !important;
                    border-radius: 0 !important;
                    border-right-width: 0 !important;
                }
    
                table[class=body] .btn table {
                    width: 100% !important;
                }
    
                table[class=body] .btn a {
                    width: 100% !important;
                }
    
                table[class=body] .img-responsive {
                    height: auto !important;
                    max-width: 100% !important;
                    width: auto !important;
                }
            }
    
            /* -------------------------------------
              PRESERVE THESE STYLES IN THE HEAD
          ------------------------------------- */
            @media all {
                .ExternalClass {
                    width: 100%;
                }
    
                .ExternalClass,
                .ExternalClass p,
                .ExternalClass span,
                .ExternalClass font,
                .ExternalClass td,
                .ExternalClass div {
                    line-height: 100%;
                }
    
                .apple-link a {
                    color: inherit !important;
                    font-family: inherit !important;
                    font-size: inherit !important;
                    font-weight: inherit !important;
                    line-height: inherit !important;
                    text-decoration: none !important;
                }
    
                #MessageViewBody a {
                    color: inherit;
                    text-decoration: none;
                    font-size: inherit;
                    font-family: inherit;
                    font-weight: inherit;
                    line-height: inherit;
                }
    
                .btn-primary table td:hover {
                    background-color: #f38080 !important;
                }
    
                .btn-primary a:hover {
                    background-color: #f38080 !important;
                    border-color: #f38080 !important;
                }
            }
        </style>
    </head>
    
    <body class="">
        <span class="preheader">Thank you for renewing the Service.</span>
        <table role="presentation" border="0" cellpadding="0" cellspacing="0" class="body">
            <tbody><tr>
                <td>&nbsp;</td>
                <td class="container">
                    <div class="content">
    
                        <!-- START CENTERED WHITE CONTAINER -->
                        <table role="presentation" class="main">
    
                            <!-- START MAIN CONTENT AREA -->
                            <tbody><tr>
                                <td class="wrapper">
                                    <table>
                                        <tbody><tr>
                                            <td><img src="'.$logoUrl.'" width="150px">
                                            </td>
                                            <td></td>
                                        </tr>
                                    </tbody></table>
                                </td>
                            </tr>
                            <tr>
                                <td class="wrapper">
                                    <table role="presentation" border="0" cellpadding="0" cellspacing="0">
                                        <tbody><tr>
                                            <td>
                                                <p>Hi '.$name.',</p>
                                                '.$body.'
                                                <table role="presentation" border="0" cellpadding="0" cellspacing="0" class="btn btn-primary">
                                                    <tbody>
                                                        <tr>
                                                            <td align="left">
                                                                <table role="presentation" border="0" cellpadding="0" cellspacing="0">
                                                                    <tbody>
                                                                        <tr>
                                                                            <td> <a href="'.$call_to_action_link.'" target="_blank">'.$call_to_action_text.'</a> </td>
                                                                        </tr>
                                                                    </tbody>
                                                                </table>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                                '.$footer.'
                                            </td>
                                        </tr>
                                    </tbody></table>
                                </td>
                            </tr>
    
                            <!-- END MAIN CONTENT AREA -->
                        </tbody></table>
                        <!-- END CENTERED WHITE CONTAINER -->
    
                        <!-- START FOOTER -->
                        <div class="footer">
                            <table role="presentation" border="0" cellpadding="0" cellspacing="0">
                                <tbody><tr>
                                    <td class="content-block">
                                        <a href="'.$siteurl.'/unsubscribe">Unsubscribe</a> |
                                        <a href="'.$siteurl.'/help">Help</a>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="content-block">
                                        <span class="apple-link">You are receiving '.$sitename.' notification emails.</span>
                                        <br> Don\'t like these emails?
    
                                    </td>
                                </tr>
                                <tr>
                                    <td class="content-block">
                                        This email was intended for '.$name.' ('.$email.'). <br>
                                        <a href="">Learn why we included this.</a>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="content-block">
                                        © 2019 '.$sitename.', '.$org_address.'.
                                        '.$sitename.' is a registered business name of '.$sitename.' Group LLC.
                                        '.$sitename.' and the '.$sitename.' logo are registered trademarks of '.$sitename.' Group LLC.
                                    </td>
                                </tr>
                            </tbody></table>
                        </div>
                        <!-- END FOOTER -->
    
                    </div>
                </td>
                <td>&nbsp;</td>
            </tr>
        </tbody></table>
    
    
    </body></html>

    ';
}


class wPDF {
    private $binary = 'wkhtmltopdf';
    private $location = '';
    private $filename = '';
    private $options = array();
    
    public function __construct($html, $filename, $location, $options = null) {
        $this->html = $html;
        $this->filename = $filename;
        $this->location = $location;
        if (is_array($options)) {
            $this->setOptions($options);
        }
    }
    
    public function binary($binary) {
        $this->binary = $binary;
    }
    
    public function setOptions($options) {
        array_filter($options);
        $pdf[] = isset($options['page']) ? '--page-size ' . $options['page'] : '';
        $pdf[] = isset($options['low_quality']) ? '--lowquality' : '';
        $pdf[] = isset($options['orientation']) && ($options['orientation'] == 'Landscape' || $options['orientation'] = 'L') ? '--orientation ' . $options['orientation'] : '';
        if (isset($options['margin'])) {
            $pdf[] = isset($options['margin']['bottom']) ? '--margin-bottom ' . $options['margin']['bottom'] : '';
            $pdf[] = isset($options['margin']['left']) ? '--margin-left ' . $options['margin']['left'] : '';
            $pdf[] = isset($options['margin']['right']) ? '--margin-right ' . $options['margin']['right'] : '';
            $pdf[] = isset($options['margin']['top']) ? '--margin-top ' . $options['margin']['top'] : '';
        }
        if (isset($options['header'])) {
            $pdf[] = isset($options['header']['center']) ? '--header-center ' . $options['header']['center'] : '';
            $pdf[] = isset($options['header']['font-name']) ? '--header-font-name ' . $options['header']['font-name'] : '';
            $pdf[] = isset($options['header']['font-size']) ? '--header-font-size ' . $options['header']['font-size'] : '';
            $pdf[] = isset($options['header']['left']) ? '--header-left ' . $options['header']['left'] : '';
            $pdf[] = isset($options['header']['line']) ? '--header-line' : '';
            $pdf[] = isset($options['header']['right']) ? '--header-right ' . $options['header']['right'] : '';
            $pdf[] = isset($options['header']['spacing']) ? '--header-spacing ' . $options['header']['spacing'] : '';
        }
        
        if (isset($options['footer'])) {
            $pdf[] = isset($options['footer']['center']) ? '--footer-center ' . $options['footer']['center'] : '';
            $pdf[] = isset($options['footer']['font-name']) ? '--footer-font-name ' . $options['footer']['font-name'] : '';
            $pdf[] = isset($options['footer']['font-size']) ? '--footer-font-size ' . $options['footer']['font-size'] : '';
            $pdf[] = isset($options['footer']['left']) ? '--footer-left ' . $options['footer']['left'] : '';
            $pdf[] = isset($options['footer']['line']) ? '--footer-line' : '';
            $pdf[] = isset($options['footer']['right']) ? '--footer-right ' . $options['footer']['right'] : '';
            $pdf[] = isset($options['footer']['spacing']) ? '--footer-spacing ' . $options['footer']['spacing'] : '';
        }
        
        $this->options = array_filter($pdf);
    }
    
    public function generatePDF() {
        $command = new shellCommand($this->binary);
        foreach ($this->options as $options) {
            $command->addArg($options);
        }
        $command->addArg($this->html, null, false);
        $command->addArg($this->location . $this->filename . '.pdf');
        // watchdog('command',$command->getCommand());
        \Drupal::messenger()->addError($command->getExecCommand());
        
        $command->execute();
        // watchdog('command',$command->getOutput());
    }
}


class shellCommand {
    public $escapeArgs = true;
    public $escapeCommand = false;
    public $useExec = false;
    public $captureStdErr = true;
    public $procCwd;
    public $procEnv;
    public $procOptions;
    public $locale;
    
    protected $_command;
    protected $_args = array();
    protected $_execCommand;
    protected $_stdOut = '';
    protected $_stdErr = '';
    protected $_exitCode;
    protected $_error = '';
    protected $_executed = false;
    
    public function __construct($options = null) {
        if (is_array($options)) {
            $this->setOptions($options);
        } elseif (is_string($options)) {
            $this->setCommand($options);
        }
    }
    
    public function setOptions($options) {
        foreach ($options as $key => $value) {
            if (property_exists($this, $key)) {
                $this->$key = $value;
            } else {
                $method = 'set' . ucfirst($key);
                if (method_exists($this, $method)) {
                    call_user_func(array(
                        $this,
                        $method
                    ), $value);
                } else {
                    throw new \Exception("Unknown configuration option '$key'");
                }
            }
        }
        return $this;
    }
    
    public function setCommand($command) {
        if ($this->escapeCommand) {
            $command = escapeshellcmd($command);
        }
        if ($this->getIsWindows()) {
            // Make sure to switch to correct drive like "E:" first if we have a full path in command
            $chdrive = (isset($command[1]) && $command[1] === ':') ? $command[0] . ': && ' : '';
            $command = sprintf($chdrive . 'cd %s && %s', escapeshellarg(dirname($command)), basename($command));
        }
        $this->_command = $command;
        return $this;
    }
    
    public function getCommand() {
        return $this->_command;
    }
    
    public function getExecCommand() {
        if ($this->_execCommand === null) {
            $command = $this->getCommand();
            if (!$command) {
                $this->_error = 'Could not locate any executable command';
                return false;
            }
            $args = $this->getArgs();
            $this->_execCommand = $args ? $command . ' ' . $args : $command;
        }
//         watchdog('command',$this->_execCommand);
        return $this->_execCommand;
    }
    
    public function setArgs($args) {
        $this->_args = array(
            $args
        );
        return $this;
    }
    
    public function getArgs() {
        return implode(' ', $this->_args);
    }
    
    public function addArg($key, $value = null, $escape = null) {
        $doEscape = $escape !== null ? $escape : $this->escapeArgs;
        $useLocale = $doEscape && $this->locale !== null;
        
        if ($useLocale) {
            $locale = setlocale(LC_CTYPE, 0); // Returns current locale setting
            setlocale(LC_CTYPE, $this->locale);
        }
        if ($value === null) {
            // Only escape single arguments if explicitely requested
            $this->_args[] = $escape ? escapeshellarg($key) : $key;
        } else {
            $separator = substr($key, -1) === '=' ? '' : ' ';
            if (is_array($value)) {
                $params = array();
                foreach ($value as $v) {
                    $params[] = $doEscape ? escapeshellarg($v) : $v;
                }
                $this->_args[] = $key . $separator . implode(' ', $params);
            } else {
                $this->_args[] = $key . $separator . ($doEscape ? escapeshellarg($value) : $value);
            }
        }
        if ($useLocale) {
            setlocale(LC_CTYPE, $locale);
        }
        
        return $this;
    }
    
    public function getOutput($trim = true) {
        return $trim ? trim($this->_stdOut) : $this->_stdOut;
    }
    
    public function getError($trim = true) {
        return $trim ? trim($this->_error) : $this->_error;
    }
    
    public function getStdErr($trim = true) {
        return $trim ? trim($this->_stdErr) : $this->_stdErr;
    }
    
    public function getExitCode() {
        return $this->_exitCode;
    }
    
    public function getExecuted() {
        return $this->_executed;
    }
    
    public function execute() {
        $command = $this->getExecCommand();
        
        if (!$command) {
            return false;
        }
        
        if ($this->useExec) {
            $execCommand = $this->captureStdErr ? "$command 2>&1" : $command;
            exec($execCommand, $output, $this->_exitCode);
            $this->_stdOut = implode("\n", $output);
            if ($this->_exitCode !== 0) {
                $this->_stdErr = $this->_stdOut;
                $this->_error = empty($this->_stdErr) ? 'Command failed' : $this->_stdErr;
                return false;
            }
        } else {
            $descriptors = array(
                1 => array(
                    'pipe',
                    'w'
                ),
                2 => array(
                    'pipe',
                    $this->getIsWindows() ? 'a' : 'w'
                )
            );
            $process = proc_open($command, $descriptors, $pipes, $this->procCwd, $this->procEnv, $this->procOptions);
            
            if (is_resource($process)) {
                
                $this->_stdOut = stream_get_contents($pipes[1]);
                $this->_stdErr = stream_get_contents($pipes[2]);
                fclose($pipes[1]);
                fclose($pipes[2]);
                
                $this->_exitCode = proc_close($process);
                
                if ($this->_exitCode !== 0) {
                    $this->_error = $this->_stdErr ? $this->_stdErr : "Failed without error message: $command";
                    return false;
                }
            } else {
                $this->_error = "Could not run command $command";
                return false;
            }
        }
        
        $this->_executed = true;
        
        return true;
    }
    
    public function getIsWindows() {
        return strncasecmp(PHP_OS, 'WIN', 3) === 0;
    }
    
    public function __toString() {
        return (string) $this->getExecCommand();
    }
}

function titleCase($str){
    return ucwords(strtolower($str));
}


function invoice_template($sitename, $invoice_no, $site_logo, $created_date, $due_date,
                 $org_address, $name, $address, $email, $currency, $items, $min, $max){
    $itemBlock = '';
    $totalAmount = 0;
    foreach($items as $item){
        $price = rand($min, $max);
        $itemBlock .= '<tr class="item"><td>'.$item.'</td><td>'.$currency.$price.'</td></tr>';
        $totalAmount += $price;                
    }
    return 
    '<!doctype html>
    <html>
    <head>
        <meta charset="utf-8">
        <title>'.$sitename.'-'.$invoice_no.'</title>
        <style>
        .invoice-box{max-width:800px;margin:auto;padding:30px;border:1px solid #eee;box-shadow:0 0 10px rgba(0,0,0,.15);font-size:16px;line-height:24px;font-family:\'Helvetica Neue\',\'Helvetica\',Helvetica,Arial,sans-serif;color:#555}.invoice-box table{width:100%;line-height:inherit;text-align:left}.invoice-box table td{padding:5px;vertical-align:top}.invoice-box table tr td:nth-child(2){text-align:right}.invoice-box table tr.top table td{padding-bottom:20px}.invoice-box table tr.top table td.title{font-size:45px;line-height:45px;color:#333}
        .invoice-box table tr.information table td{padding-bottom:40px}.invoice-box table tr.heading td{background:#eee;border-bottom:1px solid #ddd;font-weight:700}.invoice-box table tr.details td{padding-bottom:20px}.invoice-box table tr.item td{border-bottom:1px solid #eee}.invoice-box table tr.item.last td{border-bottom:none}.invoice-box table tr.total td:nth-child(2){border-top:2px solid #eee;font-weight:700}@media only screen and (max-width:600px){.invoice-box table tr.top table td{width:100%;display:block;text-align:center}
        .invoice-box table tr.information table td{width:100%;display:block;text-align:center}}.rtl{direction:rtl;font-family:Tahoma,\'Helvetica Neue\',\'Helvetica\',Helvetica,Arial,sans-serif}.rtl table{text-align:right}.rtl table tr td:nth-child(2){text-align:left}
        </style>
    </head>
    
    <body>
        <div class="invoice-box">
            <table cellpadding="0" cellspacing="0">
                <tr class="top">
                    <td colspan="2">
                        <table>
                            <tr>
                                <td class="title"><img src="'.$site_logo.'" style="width:100%; max-width:300px;"></td>
                                <td>Invoice #: '.$invoice_no.'<br>Created: '.$created_date.'<br>Due:'.$due_date.'</td>
                            </tr>
                        </table>
                    </td>
                </tr>
                
                <tr class="information">
                    <td colspan="2">
                        <table>
                            <tr>
                                <td>'.$sitename.'<br>'.$org_address.'</td>
                                <td>'.$name.'<br>'.$address.'<br>'.$email.'</td>
                            </tr>
                        </table>
                    </td>
                </tr>
                <tr class="heading"><td>Payment Method</td><td>Card #</td></tr>
                <tr class="details"><td></td><td></td></tr>
                <tr class="heading"><td>Item</td><td>Price</td></tr>
                '.$itemBlock.'
                <tr class="total"><td></td><td>Total: '.$currency.$totalAmount.'</td></tr>
            </table>
        </div>
    </body>
    </html>';
}